name: Development Deploy

on:
  push:
    branches:
      - main
    paths:
      - "**"
      - "!.github/**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changes.outputs.services }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: changes
        run: |
          SERVICES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | \
            grep "^[^/]*/" | \
            grep -v "^core/" | \
            grep -v "^.github/" | \
            cut -d/ -f1 | \
            sort -u | \
            xargs)
          echo "services=$(echo "$SERVICES" | jq -R -s -c 'split(" ")')" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: detect-changes
    if: needs.detect-changes.outputs.services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    name: build-and-deploy (${{ matrix.service }})

    steps:
      - uses: actions/checkout@v3

      - name: Setup Core
        run: |
          cd core
          npm install
          npm run build
          npm link

      - name: Install Service Dependencies
        run: |
          cd ${{ matrix.service }}
          npm link @ezdev/core
          npm install

      - name: Log in to Docker Hub
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debug Docker Image Tag
        run: |
          SERVICE=$(echo "${{ matrix.service }}" | tr -d '\n\r')
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/${SERVICE}:${{ github.sha }}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "SERVICE=${SERVICE}" >> $GITHUB_ENV
          echo "Building image tag -> ${IMAGE_TAG}"
          echo "Service name -> ${SERVICE}"

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.SERVICE }}/Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}

      - name: Deploy to Kubernetes Dev
        run: |
          SERVICE=$(echo "${{ matrix.service }}" | tr -d '\n\r')

          kubectl config set-cluster kubernetes --server=${{ secrets.K8S_SERVER_DEV }}
          kubectl config set clusters.kubernetes.certificate-authority-data ${{ secrets.K8S_CERT_DEV }}
          kubectl config set-credentials kubernetes-admin --token=${{ secrets.K8S_TOKEN_DEV }}
          kubectl config set-context kubernetes-admin@kubernetes --cluster=kubernetes --user=kubernetes-admin
          kubectl config use-context kubernetes-admin@kubernetes

          kubectl apply -f ./${SERVICE}/k8s/dev/auth-depl.yaml
          kubectl set image deployment/${SERVICE}-depl ${SERVICE}=${{ secrets.DOCKER_USERNAME }}/${SERVICE}:${{ github.sha }}
          kubectl rollout status deployment/${SERVICE}-depl
